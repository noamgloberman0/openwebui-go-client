/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the WebSearchConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebSearchConfig{}

// WebSearchConfig struct for WebSearchConfig
type WebSearchConfig struct {
	Enabled bool `json:"enabled"`
	Engine NullableString `json:"engine,omitempty"`
	SearxngQueryUrl NullableString `json:"searxng_query_url,omitempty"`
	GooglePseApiKey NullableString `json:"google_pse_api_key,omitempty"`
	GooglePseEngineId NullableString `json:"google_pse_engine_id,omitempty"`
	BraveSearchApiKey NullableString `json:"brave_search_api_key,omitempty"`
	KagiSearchApiKey NullableString `json:"kagi_search_api_key,omitempty"`
	MojeekSearchApiKey NullableString `json:"mojeek_search_api_key,omitempty"`
	BochaSearchApiKey NullableString `json:"bocha_search_api_key,omitempty"`
	SerpstackApiKey NullableString `json:"serpstack_api_key,omitempty"`
	SerpstackHttps NullableBool `json:"serpstack_https,omitempty"`
	SerperApiKey NullableString `json:"serper_api_key,omitempty"`
	SerplyApiKey NullableString `json:"serply_api_key,omitempty"`
	TavilyApiKey NullableString `json:"tavily_api_key,omitempty"`
	SearchapiApiKey NullableString `json:"searchapi_api_key,omitempty"`
	SearchapiEngine NullableString `json:"searchapi_engine,omitempty"`
	SerpapiApiKey NullableString `json:"serpapi_api_key,omitempty"`
	SerpapiEngine NullableString `json:"serpapi_engine,omitempty"`
	JinaApiKey NullableString `json:"jina_api_key,omitempty"`
	BingSearchV7Endpoint NullableString `json:"bing_search_v7_endpoint,omitempty"`
	BingSearchV7SubscriptionKey NullableString `json:"bing_search_v7_subscription_key,omitempty"`
	ExaApiKey NullableString `json:"exa_api_key,omitempty"`
	PerplexityApiKey NullableString `json:"perplexity_api_key,omitempty"`
	ResultCount NullableInt32 `json:"result_count,omitempty"`
	ConcurrentRequests NullableInt32 `json:"concurrent_requests,omitempty"`
	TrustEnv NullableBool `json:"trust_env,omitempty"`
	DomainFilterList []string `json:"domain_filter_list,omitempty"`
}

type _WebSearchConfig WebSearchConfig

// NewWebSearchConfig instantiates a new WebSearchConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebSearchConfig(enabled bool) *WebSearchConfig {
	this := WebSearchConfig{}
	this.Enabled = enabled
	return &this
}

// NewWebSearchConfigWithDefaults instantiates a new WebSearchConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebSearchConfigWithDefaults() *WebSearchConfig {
	this := WebSearchConfig{}
	return &this
}

// GetEnabled returns the Enabled field value
func (o *WebSearchConfig) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *WebSearchConfig) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *WebSearchConfig) SetEnabled(v bool) {
	o.Enabled = v
}

// GetEngine returns the Engine field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebSearchConfig) GetEngine() string {
	if o == nil || IsNil(o.Engine.Get()) {
		var ret string
		return ret
	}
	return *o.Engine.Get()
}

// GetEngineOk returns a tuple with the Engine field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebSearchConfig) GetEngineOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Engine.Get(), o.Engine.IsSet()
}

// HasEngine returns a boolean if a field has been set.
func (o *WebSearchConfig) HasEngine() bool {
	if o != nil && o.Engine.IsSet() {
		return true
	}

	return false
}

// SetEngine gets a reference to the given NullableString and assigns it to the Engine field.
func (o *WebSearchConfig) SetEngine(v string) {
	o.Engine.Set(&v)
}
// SetEngineNil sets the value for Engine to be an explicit nil
func (o *WebSearchConfig) SetEngineNil() {
	o.Engine.Set(nil)
}

// UnsetEngine ensures that no value is present for Engine, not even an explicit nil
func (o *WebSearchConfig) UnsetEngine() {
	o.Engine.Unset()
}

// GetSearxngQueryUrl returns the SearxngQueryUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebSearchConfig) GetSearxngQueryUrl() string {
	if o == nil || IsNil(o.SearxngQueryUrl.Get()) {
		var ret string
		return ret
	}
	return *o.SearxngQueryUrl.Get()
}

// GetSearxngQueryUrlOk returns a tuple with the SearxngQueryUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebSearchConfig) GetSearxngQueryUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SearxngQueryUrl.Get(), o.SearxngQueryUrl.IsSet()
}

// HasSearxngQueryUrl returns a boolean if a field has been set.
func (o *WebSearchConfig) HasSearxngQueryUrl() bool {
	if o != nil && o.SearxngQueryUrl.IsSet() {
		return true
	}

	return false
}

// SetSearxngQueryUrl gets a reference to the given NullableString and assigns it to the SearxngQueryUrl field.
func (o *WebSearchConfig) SetSearxngQueryUrl(v string) {
	o.SearxngQueryUrl.Set(&v)
}
// SetSearxngQueryUrlNil sets the value for SearxngQueryUrl to be an explicit nil
func (o *WebSearchConfig) SetSearxngQueryUrlNil() {
	o.SearxngQueryUrl.Set(nil)
}

// UnsetSearxngQueryUrl ensures that no value is present for SearxngQueryUrl, not even an explicit nil
func (o *WebSearchConfig) UnsetSearxngQueryUrl() {
	o.SearxngQueryUrl.Unset()
}

// GetGooglePseApiKey returns the GooglePseApiKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebSearchConfig) GetGooglePseApiKey() string {
	if o == nil || IsNil(o.GooglePseApiKey.Get()) {
		var ret string
		return ret
	}
	return *o.GooglePseApiKey.Get()
}

// GetGooglePseApiKeyOk returns a tuple with the GooglePseApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebSearchConfig) GetGooglePseApiKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GooglePseApiKey.Get(), o.GooglePseApiKey.IsSet()
}

// HasGooglePseApiKey returns a boolean if a field has been set.
func (o *WebSearchConfig) HasGooglePseApiKey() bool {
	if o != nil && o.GooglePseApiKey.IsSet() {
		return true
	}

	return false
}

// SetGooglePseApiKey gets a reference to the given NullableString and assigns it to the GooglePseApiKey field.
func (o *WebSearchConfig) SetGooglePseApiKey(v string) {
	o.GooglePseApiKey.Set(&v)
}
// SetGooglePseApiKeyNil sets the value for GooglePseApiKey to be an explicit nil
func (o *WebSearchConfig) SetGooglePseApiKeyNil() {
	o.GooglePseApiKey.Set(nil)
}

// UnsetGooglePseApiKey ensures that no value is present for GooglePseApiKey, not even an explicit nil
func (o *WebSearchConfig) UnsetGooglePseApiKey() {
	o.GooglePseApiKey.Unset()
}

// GetGooglePseEngineId returns the GooglePseEngineId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebSearchConfig) GetGooglePseEngineId() string {
	if o == nil || IsNil(o.GooglePseEngineId.Get()) {
		var ret string
		return ret
	}
	return *o.GooglePseEngineId.Get()
}

// GetGooglePseEngineIdOk returns a tuple with the GooglePseEngineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebSearchConfig) GetGooglePseEngineIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GooglePseEngineId.Get(), o.GooglePseEngineId.IsSet()
}

// HasGooglePseEngineId returns a boolean if a field has been set.
func (o *WebSearchConfig) HasGooglePseEngineId() bool {
	if o != nil && o.GooglePseEngineId.IsSet() {
		return true
	}

	return false
}

// SetGooglePseEngineId gets a reference to the given NullableString and assigns it to the GooglePseEngineId field.
func (o *WebSearchConfig) SetGooglePseEngineId(v string) {
	o.GooglePseEngineId.Set(&v)
}
// SetGooglePseEngineIdNil sets the value for GooglePseEngineId to be an explicit nil
func (o *WebSearchConfig) SetGooglePseEngineIdNil() {
	o.GooglePseEngineId.Set(nil)
}

// UnsetGooglePseEngineId ensures that no value is present for GooglePseEngineId, not even an explicit nil
func (o *WebSearchConfig) UnsetGooglePseEngineId() {
	o.GooglePseEngineId.Unset()
}

// GetBraveSearchApiKey returns the BraveSearchApiKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebSearchConfig) GetBraveSearchApiKey() string {
	if o == nil || IsNil(o.BraveSearchApiKey.Get()) {
		var ret string
		return ret
	}
	return *o.BraveSearchApiKey.Get()
}

// GetBraveSearchApiKeyOk returns a tuple with the BraveSearchApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebSearchConfig) GetBraveSearchApiKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BraveSearchApiKey.Get(), o.BraveSearchApiKey.IsSet()
}

// HasBraveSearchApiKey returns a boolean if a field has been set.
func (o *WebSearchConfig) HasBraveSearchApiKey() bool {
	if o != nil && o.BraveSearchApiKey.IsSet() {
		return true
	}

	return false
}

// SetBraveSearchApiKey gets a reference to the given NullableString and assigns it to the BraveSearchApiKey field.
func (o *WebSearchConfig) SetBraveSearchApiKey(v string) {
	o.BraveSearchApiKey.Set(&v)
}
// SetBraveSearchApiKeyNil sets the value for BraveSearchApiKey to be an explicit nil
func (o *WebSearchConfig) SetBraveSearchApiKeyNil() {
	o.BraveSearchApiKey.Set(nil)
}

// UnsetBraveSearchApiKey ensures that no value is present for BraveSearchApiKey, not even an explicit nil
func (o *WebSearchConfig) UnsetBraveSearchApiKey() {
	o.BraveSearchApiKey.Unset()
}

// GetKagiSearchApiKey returns the KagiSearchApiKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebSearchConfig) GetKagiSearchApiKey() string {
	if o == nil || IsNil(o.KagiSearchApiKey.Get()) {
		var ret string
		return ret
	}
	return *o.KagiSearchApiKey.Get()
}

// GetKagiSearchApiKeyOk returns a tuple with the KagiSearchApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebSearchConfig) GetKagiSearchApiKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.KagiSearchApiKey.Get(), o.KagiSearchApiKey.IsSet()
}

// HasKagiSearchApiKey returns a boolean if a field has been set.
func (o *WebSearchConfig) HasKagiSearchApiKey() bool {
	if o != nil && o.KagiSearchApiKey.IsSet() {
		return true
	}

	return false
}

// SetKagiSearchApiKey gets a reference to the given NullableString and assigns it to the KagiSearchApiKey field.
func (o *WebSearchConfig) SetKagiSearchApiKey(v string) {
	o.KagiSearchApiKey.Set(&v)
}
// SetKagiSearchApiKeyNil sets the value for KagiSearchApiKey to be an explicit nil
func (o *WebSearchConfig) SetKagiSearchApiKeyNil() {
	o.KagiSearchApiKey.Set(nil)
}

// UnsetKagiSearchApiKey ensures that no value is present for KagiSearchApiKey, not even an explicit nil
func (o *WebSearchConfig) UnsetKagiSearchApiKey() {
	o.KagiSearchApiKey.Unset()
}

// GetMojeekSearchApiKey returns the MojeekSearchApiKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebSearchConfig) GetMojeekSearchApiKey() string {
	if o == nil || IsNil(o.MojeekSearchApiKey.Get()) {
		var ret string
		return ret
	}
	return *o.MojeekSearchApiKey.Get()
}

// GetMojeekSearchApiKeyOk returns a tuple with the MojeekSearchApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebSearchConfig) GetMojeekSearchApiKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MojeekSearchApiKey.Get(), o.MojeekSearchApiKey.IsSet()
}

// HasMojeekSearchApiKey returns a boolean if a field has been set.
func (o *WebSearchConfig) HasMojeekSearchApiKey() bool {
	if o != nil && o.MojeekSearchApiKey.IsSet() {
		return true
	}

	return false
}

// SetMojeekSearchApiKey gets a reference to the given NullableString and assigns it to the MojeekSearchApiKey field.
func (o *WebSearchConfig) SetMojeekSearchApiKey(v string) {
	o.MojeekSearchApiKey.Set(&v)
}
// SetMojeekSearchApiKeyNil sets the value for MojeekSearchApiKey to be an explicit nil
func (o *WebSearchConfig) SetMojeekSearchApiKeyNil() {
	o.MojeekSearchApiKey.Set(nil)
}

// UnsetMojeekSearchApiKey ensures that no value is present for MojeekSearchApiKey, not even an explicit nil
func (o *WebSearchConfig) UnsetMojeekSearchApiKey() {
	o.MojeekSearchApiKey.Unset()
}

// GetBochaSearchApiKey returns the BochaSearchApiKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebSearchConfig) GetBochaSearchApiKey() string {
	if o == nil || IsNil(o.BochaSearchApiKey.Get()) {
		var ret string
		return ret
	}
	return *o.BochaSearchApiKey.Get()
}

// GetBochaSearchApiKeyOk returns a tuple with the BochaSearchApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebSearchConfig) GetBochaSearchApiKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BochaSearchApiKey.Get(), o.BochaSearchApiKey.IsSet()
}

// HasBochaSearchApiKey returns a boolean if a field has been set.
func (o *WebSearchConfig) HasBochaSearchApiKey() bool {
	if o != nil && o.BochaSearchApiKey.IsSet() {
		return true
	}

	return false
}

// SetBochaSearchApiKey gets a reference to the given NullableString and assigns it to the BochaSearchApiKey field.
func (o *WebSearchConfig) SetBochaSearchApiKey(v string) {
	o.BochaSearchApiKey.Set(&v)
}
// SetBochaSearchApiKeyNil sets the value for BochaSearchApiKey to be an explicit nil
func (o *WebSearchConfig) SetBochaSearchApiKeyNil() {
	o.BochaSearchApiKey.Set(nil)
}

// UnsetBochaSearchApiKey ensures that no value is present for BochaSearchApiKey, not even an explicit nil
func (o *WebSearchConfig) UnsetBochaSearchApiKey() {
	o.BochaSearchApiKey.Unset()
}

// GetSerpstackApiKey returns the SerpstackApiKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebSearchConfig) GetSerpstackApiKey() string {
	if o == nil || IsNil(o.SerpstackApiKey.Get()) {
		var ret string
		return ret
	}
	return *o.SerpstackApiKey.Get()
}

// GetSerpstackApiKeyOk returns a tuple with the SerpstackApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebSearchConfig) GetSerpstackApiKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SerpstackApiKey.Get(), o.SerpstackApiKey.IsSet()
}

// HasSerpstackApiKey returns a boolean if a field has been set.
func (o *WebSearchConfig) HasSerpstackApiKey() bool {
	if o != nil && o.SerpstackApiKey.IsSet() {
		return true
	}

	return false
}

// SetSerpstackApiKey gets a reference to the given NullableString and assigns it to the SerpstackApiKey field.
func (o *WebSearchConfig) SetSerpstackApiKey(v string) {
	o.SerpstackApiKey.Set(&v)
}
// SetSerpstackApiKeyNil sets the value for SerpstackApiKey to be an explicit nil
func (o *WebSearchConfig) SetSerpstackApiKeyNil() {
	o.SerpstackApiKey.Set(nil)
}

// UnsetSerpstackApiKey ensures that no value is present for SerpstackApiKey, not even an explicit nil
func (o *WebSearchConfig) UnsetSerpstackApiKey() {
	o.SerpstackApiKey.Unset()
}

// GetSerpstackHttps returns the SerpstackHttps field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebSearchConfig) GetSerpstackHttps() bool {
	if o == nil || IsNil(o.SerpstackHttps.Get()) {
		var ret bool
		return ret
	}
	return *o.SerpstackHttps.Get()
}

// GetSerpstackHttpsOk returns a tuple with the SerpstackHttps field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebSearchConfig) GetSerpstackHttpsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.SerpstackHttps.Get(), o.SerpstackHttps.IsSet()
}

// HasSerpstackHttps returns a boolean if a field has been set.
func (o *WebSearchConfig) HasSerpstackHttps() bool {
	if o != nil && o.SerpstackHttps.IsSet() {
		return true
	}

	return false
}

// SetSerpstackHttps gets a reference to the given NullableBool and assigns it to the SerpstackHttps field.
func (o *WebSearchConfig) SetSerpstackHttps(v bool) {
	o.SerpstackHttps.Set(&v)
}
// SetSerpstackHttpsNil sets the value for SerpstackHttps to be an explicit nil
func (o *WebSearchConfig) SetSerpstackHttpsNil() {
	o.SerpstackHttps.Set(nil)
}

// UnsetSerpstackHttps ensures that no value is present for SerpstackHttps, not even an explicit nil
func (o *WebSearchConfig) UnsetSerpstackHttps() {
	o.SerpstackHttps.Unset()
}

// GetSerperApiKey returns the SerperApiKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebSearchConfig) GetSerperApiKey() string {
	if o == nil || IsNil(o.SerperApiKey.Get()) {
		var ret string
		return ret
	}
	return *o.SerperApiKey.Get()
}

// GetSerperApiKeyOk returns a tuple with the SerperApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebSearchConfig) GetSerperApiKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SerperApiKey.Get(), o.SerperApiKey.IsSet()
}

// HasSerperApiKey returns a boolean if a field has been set.
func (o *WebSearchConfig) HasSerperApiKey() bool {
	if o != nil && o.SerperApiKey.IsSet() {
		return true
	}

	return false
}

// SetSerperApiKey gets a reference to the given NullableString and assigns it to the SerperApiKey field.
func (o *WebSearchConfig) SetSerperApiKey(v string) {
	o.SerperApiKey.Set(&v)
}
// SetSerperApiKeyNil sets the value for SerperApiKey to be an explicit nil
func (o *WebSearchConfig) SetSerperApiKeyNil() {
	o.SerperApiKey.Set(nil)
}

// UnsetSerperApiKey ensures that no value is present for SerperApiKey, not even an explicit nil
func (o *WebSearchConfig) UnsetSerperApiKey() {
	o.SerperApiKey.Unset()
}

// GetSerplyApiKey returns the SerplyApiKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebSearchConfig) GetSerplyApiKey() string {
	if o == nil || IsNil(o.SerplyApiKey.Get()) {
		var ret string
		return ret
	}
	return *o.SerplyApiKey.Get()
}

// GetSerplyApiKeyOk returns a tuple with the SerplyApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebSearchConfig) GetSerplyApiKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SerplyApiKey.Get(), o.SerplyApiKey.IsSet()
}

// HasSerplyApiKey returns a boolean if a field has been set.
func (o *WebSearchConfig) HasSerplyApiKey() bool {
	if o != nil && o.SerplyApiKey.IsSet() {
		return true
	}

	return false
}

// SetSerplyApiKey gets a reference to the given NullableString and assigns it to the SerplyApiKey field.
func (o *WebSearchConfig) SetSerplyApiKey(v string) {
	o.SerplyApiKey.Set(&v)
}
// SetSerplyApiKeyNil sets the value for SerplyApiKey to be an explicit nil
func (o *WebSearchConfig) SetSerplyApiKeyNil() {
	o.SerplyApiKey.Set(nil)
}

// UnsetSerplyApiKey ensures that no value is present for SerplyApiKey, not even an explicit nil
func (o *WebSearchConfig) UnsetSerplyApiKey() {
	o.SerplyApiKey.Unset()
}

// GetTavilyApiKey returns the TavilyApiKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebSearchConfig) GetTavilyApiKey() string {
	if o == nil || IsNil(o.TavilyApiKey.Get()) {
		var ret string
		return ret
	}
	return *o.TavilyApiKey.Get()
}

// GetTavilyApiKeyOk returns a tuple with the TavilyApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebSearchConfig) GetTavilyApiKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TavilyApiKey.Get(), o.TavilyApiKey.IsSet()
}

// HasTavilyApiKey returns a boolean if a field has been set.
func (o *WebSearchConfig) HasTavilyApiKey() bool {
	if o != nil && o.TavilyApiKey.IsSet() {
		return true
	}

	return false
}

// SetTavilyApiKey gets a reference to the given NullableString and assigns it to the TavilyApiKey field.
func (o *WebSearchConfig) SetTavilyApiKey(v string) {
	o.TavilyApiKey.Set(&v)
}
// SetTavilyApiKeyNil sets the value for TavilyApiKey to be an explicit nil
func (o *WebSearchConfig) SetTavilyApiKeyNil() {
	o.TavilyApiKey.Set(nil)
}

// UnsetTavilyApiKey ensures that no value is present for TavilyApiKey, not even an explicit nil
func (o *WebSearchConfig) UnsetTavilyApiKey() {
	o.TavilyApiKey.Unset()
}

// GetSearchapiApiKey returns the SearchapiApiKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebSearchConfig) GetSearchapiApiKey() string {
	if o == nil || IsNil(o.SearchapiApiKey.Get()) {
		var ret string
		return ret
	}
	return *o.SearchapiApiKey.Get()
}

// GetSearchapiApiKeyOk returns a tuple with the SearchapiApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebSearchConfig) GetSearchapiApiKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SearchapiApiKey.Get(), o.SearchapiApiKey.IsSet()
}

// HasSearchapiApiKey returns a boolean if a field has been set.
func (o *WebSearchConfig) HasSearchapiApiKey() bool {
	if o != nil && o.SearchapiApiKey.IsSet() {
		return true
	}

	return false
}

// SetSearchapiApiKey gets a reference to the given NullableString and assigns it to the SearchapiApiKey field.
func (o *WebSearchConfig) SetSearchapiApiKey(v string) {
	o.SearchapiApiKey.Set(&v)
}
// SetSearchapiApiKeyNil sets the value for SearchapiApiKey to be an explicit nil
func (o *WebSearchConfig) SetSearchapiApiKeyNil() {
	o.SearchapiApiKey.Set(nil)
}

// UnsetSearchapiApiKey ensures that no value is present for SearchapiApiKey, not even an explicit nil
func (o *WebSearchConfig) UnsetSearchapiApiKey() {
	o.SearchapiApiKey.Unset()
}

// GetSearchapiEngine returns the SearchapiEngine field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebSearchConfig) GetSearchapiEngine() string {
	if o == nil || IsNil(o.SearchapiEngine.Get()) {
		var ret string
		return ret
	}
	return *o.SearchapiEngine.Get()
}

// GetSearchapiEngineOk returns a tuple with the SearchapiEngine field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebSearchConfig) GetSearchapiEngineOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SearchapiEngine.Get(), o.SearchapiEngine.IsSet()
}

// HasSearchapiEngine returns a boolean if a field has been set.
func (o *WebSearchConfig) HasSearchapiEngine() bool {
	if o != nil && o.SearchapiEngine.IsSet() {
		return true
	}

	return false
}

// SetSearchapiEngine gets a reference to the given NullableString and assigns it to the SearchapiEngine field.
func (o *WebSearchConfig) SetSearchapiEngine(v string) {
	o.SearchapiEngine.Set(&v)
}
// SetSearchapiEngineNil sets the value for SearchapiEngine to be an explicit nil
func (o *WebSearchConfig) SetSearchapiEngineNil() {
	o.SearchapiEngine.Set(nil)
}

// UnsetSearchapiEngine ensures that no value is present for SearchapiEngine, not even an explicit nil
func (o *WebSearchConfig) UnsetSearchapiEngine() {
	o.SearchapiEngine.Unset()
}

// GetSerpapiApiKey returns the SerpapiApiKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebSearchConfig) GetSerpapiApiKey() string {
	if o == nil || IsNil(o.SerpapiApiKey.Get()) {
		var ret string
		return ret
	}
	return *o.SerpapiApiKey.Get()
}

// GetSerpapiApiKeyOk returns a tuple with the SerpapiApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebSearchConfig) GetSerpapiApiKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SerpapiApiKey.Get(), o.SerpapiApiKey.IsSet()
}

// HasSerpapiApiKey returns a boolean if a field has been set.
func (o *WebSearchConfig) HasSerpapiApiKey() bool {
	if o != nil && o.SerpapiApiKey.IsSet() {
		return true
	}

	return false
}

// SetSerpapiApiKey gets a reference to the given NullableString and assigns it to the SerpapiApiKey field.
func (o *WebSearchConfig) SetSerpapiApiKey(v string) {
	o.SerpapiApiKey.Set(&v)
}
// SetSerpapiApiKeyNil sets the value for SerpapiApiKey to be an explicit nil
func (o *WebSearchConfig) SetSerpapiApiKeyNil() {
	o.SerpapiApiKey.Set(nil)
}

// UnsetSerpapiApiKey ensures that no value is present for SerpapiApiKey, not even an explicit nil
func (o *WebSearchConfig) UnsetSerpapiApiKey() {
	o.SerpapiApiKey.Unset()
}

// GetSerpapiEngine returns the SerpapiEngine field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebSearchConfig) GetSerpapiEngine() string {
	if o == nil || IsNil(o.SerpapiEngine.Get()) {
		var ret string
		return ret
	}
	return *o.SerpapiEngine.Get()
}

// GetSerpapiEngineOk returns a tuple with the SerpapiEngine field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebSearchConfig) GetSerpapiEngineOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SerpapiEngine.Get(), o.SerpapiEngine.IsSet()
}

// HasSerpapiEngine returns a boolean if a field has been set.
func (o *WebSearchConfig) HasSerpapiEngine() bool {
	if o != nil && o.SerpapiEngine.IsSet() {
		return true
	}

	return false
}

// SetSerpapiEngine gets a reference to the given NullableString and assigns it to the SerpapiEngine field.
func (o *WebSearchConfig) SetSerpapiEngine(v string) {
	o.SerpapiEngine.Set(&v)
}
// SetSerpapiEngineNil sets the value for SerpapiEngine to be an explicit nil
func (o *WebSearchConfig) SetSerpapiEngineNil() {
	o.SerpapiEngine.Set(nil)
}

// UnsetSerpapiEngine ensures that no value is present for SerpapiEngine, not even an explicit nil
func (o *WebSearchConfig) UnsetSerpapiEngine() {
	o.SerpapiEngine.Unset()
}

// GetJinaApiKey returns the JinaApiKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebSearchConfig) GetJinaApiKey() string {
	if o == nil || IsNil(o.JinaApiKey.Get()) {
		var ret string
		return ret
	}
	return *o.JinaApiKey.Get()
}

// GetJinaApiKeyOk returns a tuple with the JinaApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebSearchConfig) GetJinaApiKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.JinaApiKey.Get(), o.JinaApiKey.IsSet()
}

// HasJinaApiKey returns a boolean if a field has been set.
func (o *WebSearchConfig) HasJinaApiKey() bool {
	if o != nil && o.JinaApiKey.IsSet() {
		return true
	}

	return false
}

// SetJinaApiKey gets a reference to the given NullableString and assigns it to the JinaApiKey field.
func (o *WebSearchConfig) SetJinaApiKey(v string) {
	o.JinaApiKey.Set(&v)
}
// SetJinaApiKeyNil sets the value for JinaApiKey to be an explicit nil
func (o *WebSearchConfig) SetJinaApiKeyNil() {
	o.JinaApiKey.Set(nil)
}

// UnsetJinaApiKey ensures that no value is present for JinaApiKey, not even an explicit nil
func (o *WebSearchConfig) UnsetJinaApiKey() {
	o.JinaApiKey.Unset()
}

// GetBingSearchV7Endpoint returns the BingSearchV7Endpoint field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebSearchConfig) GetBingSearchV7Endpoint() string {
	if o == nil || IsNil(o.BingSearchV7Endpoint.Get()) {
		var ret string
		return ret
	}
	return *o.BingSearchV7Endpoint.Get()
}

// GetBingSearchV7EndpointOk returns a tuple with the BingSearchV7Endpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebSearchConfig) GetBingSearchV7EndpointOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BingSearchV7Endpoint.Get(), o.BingSearchV7Endpoint.IsSet()
}

// HasBingSearchV7Endpoint returns a boolean if a field has been set.
func (o *WebSearchConfig) HasBingSearchV7Endpoint() bool {
	if o != nil && o.BingSearchV7Endpoint.IsSet() {
		return true
	}

	return false
}

// SetBingSearchV7Endpoint gets a reference to the given NullableString and assigns it to the BingSearchV7Endpoint field.
func (o *WebSearchConfig) SetBingSearchV7Endpoint(v string) {
	o.BingSearchV7Endpoint.Set(&v)
}
// SetBingSearchV7EndpointNil sets the value for BingSearchV7Endpoint to be an explicit nil
func (o *WebSearchConfig) SetBingSearchV7EndpointNil() {
	o.BingSearchV7Endpoint.Set(nil)
}

// UnsetBingSearchV7Endpoint ensures that no value is present for BingSearchV7Endpoint, not even an explicit nil
func (o *WebSearchConfig) UnsetBingSearchV7Endpoint() {
	o.BingSearchV7Endpoint.Unset()
}

// GetBingSearchV7SubscriptionKey returns the BingSearchV7SubscriptionKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebSearchConfig) GetBingSearchV7SubscriptionKey() string {
	if o == nil || IsNil(o.BingSearchV7SubscriptionKey.Get()) {
		var ret string
		return ret
	}
	return *o.BingSearchV7SubscriptionKey.Get()
}

// GetBingSearchV7SubscriptionKeyOk returns a tuple with the BingSearchV7SubscriptionKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebSearchConfig) GetBingSearchV7SubscriptionKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BingSearchV7SubscriptionKey.Get(), o.BingSearchV7SubscriptionKey.IsSet()
}

// HasBingSearchV7SubscriptionKey returns a boolean if a field has been set.
func (o *WebSearchConfig) HasBingSearchV7SubscriptionKey() bool {
	if o != nil && o.BingSearchV7SubscriptionKey.IsSet() {
		return true
	}

	return false
}

// SetBingSearchV7SubscriptionKey gets a reference to the given NullableString and assigns it to the BingSearchV7SubscriptionKey field.
func (o *WebSearchConfig) SetBingSearchV7SubscriptionKey(v string) {
	o.BingSearchV7SubscriptionKey.Set(&v)
}
// SetBingSearchV7SubscriptionKeyNil sets the value for BingSearchV7SubscriptionKey to be an explicit nil
func (o *WebSearchConfig) SetBingSearchV7SubscriptionKeyNil() {
	o.BingSearchV7SubscriptionKey.Set(nil)
}

// UnsetBingSearchV7SubscriptionKey ensures that no value is present for BingSearchV7SubscriptionKey, not even an explicit nil
func (o *WebSearchConfig) UnsetBingSearchV7SubscriptionKey() {
	o.BingSearchV7SubscriptionKey.Unset()
}

// GetExaApiKey returns the ExaApiKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebSearchConfig) GetExaApiKey() string {
	if o == nil || IsNil(o.ExaApiKey.Get()) {
		var ret string
		return ret
	}
	return *o.ExaApiKey.Get()
}

// GetExaApiKeyOk returns a tuple with the ExaApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebSearchConfig) GetExaApiKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExaApiKey.Get(), o.ExaApiKey.IsSet()
}

// HasExaApiKey returns a boolean if a field has been set.
func (o *WebSearchConfig) HasExaApiKey() bool {
	if o != nil && o.ExaApiKey.IsSet() {
		return true
	}

	return false
}

// SetExaApiKey gets a reference to the given NullableString and assigns it to the ExaApiKey field.
func (o *WebSearchConfig) SetExaApiKey(v string) {
	o.ExaApiKey.Set(&v)
}
// SetExaApiKeyNil sets the value for ExaApiKey to be an explicit nil
func (o *WebSearchConfig) SetExaApiKeyNil() {
	o.ExaApiKey.Set(nil)
}

// UnsetExaApiKey ensures that no value is present for ExaApiKey, not even an explicit nil
func (o *WebSearchConfig) UnsetExaApiKey() {
	o.ExaApiKey.Unset()
}

// GetPerplexityApiKey returns the PerplexityApiKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebSearchConfig) GetPerplexityApiKey() string {
	if o == nil || IsNil(o.PerplexityApiKey.Get()) {
		var ret string
		return ret
	}
	return *o.PerplexityApiKey.Get()
}

// GetPerplexityApiKeyOk returns a tuple with the PerplexityApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebSearchConfig) GetPerplexityApiKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PerplexityApiKey.Get(), o.PerplexityApiKey.IsSet()
}

// HasPerplexityApiKey returns a boolean if a field has been set.
func (o *WebSearchConfig) HasPerplexityApiKey() bool {
	if o != nil && o.PerplexityApiKey.IsSet() {
		return true
	}

	return false
}

// SetPerplexityApiKey gets a reference to the given NullableString and assigns it to the PerplexityApiKey field.
func (o *WebSearchConfig) SetPerplexityApiKey(v string) {
	o.PerplexityApiKey.Set(&v)
}
// SetPerplexityApiKeyNil sets the value for PerplexityApiKey to be an explicit nil
func (o *WebSearchConfig) SetPerplexityApiKeyNil() {
	o.PerplexityApiKey.Set(nil)
}

// UnsetPerplexityApiKey ensures that no value is present for PerplexityApiKey, not even an explicit nil
func (o *WebSearchConfig) UnsetPerplexityApiKey() {
	o.PerplexityApiKey.Unset()
}

// GetResultCount returns the ResultCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebSearchConfig) GetResultCount() int32 {
	if o == nil || IsNil(o.ResultCount.Get()) {
		var ret int32
		return ret
	}
	return *o.ResultCount.Get()
}

// GetResultCountOk returns a tuple with the ResultCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebSearchConfig) GetResultCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResultCount.Get(), o.ResultCount.IsSet()
}

// HasResultCount returns a boolean if a field has been set.
func (o *WebSearchConfig) HasResultCount() bool {
	if o != nil && o.ResultCount.IsSet() {
		return true
	}

	return false
}

// SetResultCount gets a reference to the given NullableInt32 and assigns it to the ResultCount field.
func (o *WebSearchConfig) SetResultCount(v int32) {
	o.ResultCount.Set(&v)
}
// SetResultCountNil sets the value for ResultCount to be an explicit nil
func (o *WebSearchConfig) SetResultCountNil() {
	o.ResultCount.Set(nil)
}

// UnsetResultCount ensures that no value is present for ResultCount, not even an explicit nil
func (o *WebSearchConfig) UnsetResultCount() {
	o.ResultCount.Unset()
}

// GetConcurrentRequests returns the ConcurrentRequests field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebSearchConfig) GetConcurrentRequests() int32 {
	if o == nil || IsNil(o.ConcurrentRequests.Get()) {
		var ret int32
		return ret
	}
	return *o.ConcurrentRequests.Get()
}

// GetConcurrentRequestsOk returns a tuple with the ConcurrentRequests field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebSearchConfig) GetConcurrentRequestsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConcurrentRequests.Get(), o.ConcurrentRequests.IsSet()
}

// HasConcurrentRequests returns a boolean if a field has been set.
func (o *WebSearchConfig) HasConcurrentRequests() bool {
	if o != nil && o.ConcurrentRequests.IsSet() {
		return true
	}

	return false
}

// SetConcurrentRequests gets a reference to the given NullableInt32 and assigns it to the ConcurrentRequests field.
func (o *WebSearchConfig) SetConcurrentRequests(v int32) {
	o.ConcurrentRequests.Set(&v)
}
// SetConcurrentRequestsNil sets the value for ConcurrentRequests to be an explicit nil
func (o *WebSearchConfig) SetConcurrentRequestsNil() {
	o.ConcurrentRequests.Set(nil)
}

// UnsetConcurrentRequests ensures that no value is present for ConcurrentRequests, not even an explicit nil
func (o *WebSearchConfig) UnsetConcurrentRequests() {
	o.ConcurrentRequests.Unset()
}

// GetTrustEnv returns the TrustEnv field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebSearchConfig) GetTrustEnv() bool {
	if o == nil || IsNil(o.TrustEnv.Get()) {
		var ret bool
		return ret
	}
	return *o.TrustEnv.Get()
}

// GetTrustEnvOk returns a tuple with the TrustEnv field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebSearchConfig) GetTrustEnvOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrustEnv.Get(), o.TrustEnv.IsSet()
}

// HasTrustEnv returns a boolean if a field has been set.
func (o *WebSearchConfig) HasTrustEnv() bool {
	if o != nil && o.TrustEnv.IsSet() {
		return true
	}

	return false
}

// SetTrustEnv gets a reference to the given NullableBool and assigns it to the TrustEnv field.
func (o *WebSearchConfig) SetTrustEnv(v bool) {
	o.TrustEnv.Set(&v)
}
// SetTrustEnvNil sets the value for TrustEnv to be an explicit nil
func (o *WebSearchConfig) SetTrustEnvNil() {
	o.TrustEnv.Set(nil)
}

// UnsetTrustEnv ensures that no value is present for TrustEnv, not even an explicit nil
func (o *WebSearchConfig) UnsetTrustEnv() {
	o.TrustEnv.Unset()
}

// GetDomainFilterList returns the DomainFilterList field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebSearchConfig) GetDomainFilterList() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.DomainFilterList
}

// GetDomainFilterListOk returns a tuple with the DomainFilterList field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebSearchConfig) GetDomainFilterListOk() ([]string, bool) {
	if o == nil || IsNil(o.DomainFilterList) {
		return nil, false
	}
	return o.DomainFilterList, true
}

// HasDomainFilterList returns a boolean if a field has been set.
func (o *WebSearchConfig) HasDomainFilterList() bool {
	if o != nil && !IsNil(o.DomainFilterList) {
		return true
	}

	return false
}

// SetDomainFilterList gets a reference to the given []string and assigns it to the DomainFilterList field.
func (o *WebSearchConfig) SetDomainFilterList(v []string) {
	o.DomainFilterList = v
}

func (o WebSearchConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebSearchConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["enabled"] = o.Enabled
	if o.Engine.IsSet() {
		toSerialize["engine"] = o.Engine.Get()
	}
	if o.SearxngQueryUrl.IsSet() {
		toSerialize["searxng_query_url"] = o.SearxngQueryUrl.Get()
	}
	if o.GooglePseApiKey.IsSet() {
		toSerialize["google_pse_api_key"] = o.GooglePseApiKey.Get()
	}
	if o.GooglePseEngineId.IsSet() {
		toSerialize["google_pse_engine_id"] = o.GooglePseEngineId.Get()
	}
	if o.BraveSearchApiKey.IsSet() {
		toSerialize["brave_search_api_key"] = o.BraveSearchApiKey.Get()
	}
	if o.KagiSearchApiKey.IsSet() {
		toSerialize["kagi_search_api_key"] = o.KagiSearchApiKey.Get()
	}
	if o.MojeekSearchApiKey.IsSet() {
		toSerialize["mojeek_search_api_key"] = o.MojeekSearchApiKey.Get()
	}
	if o.BochaSearchApiKey.IsSet() {
		toSerialize["bocha_search_api_key"] = o.BochaSearchApiKey.Get()
	}
	if o.SerpstackApiKey.IsSet() {
		toSerialize["serpstack_api_key"] = o.SerpstackApiKey.Get()
	}
	if o.SerpstackHttps.IsSet() {
		toSerialize["serpstack_https"] = o.SerpstackHttps.Get()
	}
	if o.SerperApiKey.IsSet() {
		toSerialize["serper_api_key"] = o.SerperApiKey.Get()
	}
	if o.SerplyApiKey.IsSet() {
		toSerialize["serply_api_key"] = o.SerplyApiKey.Get()
	}
	if o.TavilyApiKey.IsSet() {
		toSerialize["tavily_api_key"] = o.TavilyApiKey.Get()
	}
	if o.SearchapiApiKey.IsSet() {
		toSerialize["searchapi_api_key"] = o.SearchapiApiKey.Get()
	}
	if o.SearchapiEngine.IsSet() {
		toSerialize["searchapi_engine"] = o.SearchapiEngine.Get()
	}
	if o.SerpapiApiKey.IsSet() {
		toSerialize["serpapi_api_key"] = o.SerpapiApiKey.Get()
	}
	if o.SerpapiEngine.IsSet() {
		toSerialize["serpapi_engine"] = o.SerpapiEngine.Get()
	}
	if o.JinaApiKey.IsSet() {
		toSerialize["jina_api_key"] = o.JinaApiKey.Get()
	}
	if o.BingSearchV7Endpoint.IsSet() {
		toSerialize["bing_search_v7_endpoint"] = o.BingSearchV7Endpoint.Get()
	}
	if o.BingSearchV7SubscriptionKey.IsSet() {
		toSerialize["bing_search_v7_subscription_key"] = o.BingSearchV7SubscriptionKey.Get()
	}
	if o.ExaApiKey.IsSet() {
		toSerialize["exa_api_key"] = o.ExaApiKey.Get()
	}
	if o.PerplexityApiKey.IsSet() {
		toSerialize["perplexity_api_key"] = o.PerplexityApiKey.Get()
	}
	if o.ResultCount.IsSet() {
		toSerialize["result_count"] = o.ResultCount.Get()
	}
	if o.ConcurrentRequests.IsSet() {
		toSerialize["concurrent_requests"] = o.ConcurrentRequests.Get()
	}
	if o.TrustEnv.IsSet() {
		toSerialize["trust_env"] = o.TrustEnv.Get()
	}
	if o.DomainFilterList != nil {
		toSerialize["domain_filter_list"] = o.DomainFilterList
	}
	return toSerialize, nil
}

func (o *WebSearchConfig) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"enabled",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWebSearchConfig := _WebSearchConfig{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWebSearchConfig)

	if err != nil {
		return err
	}

	*o = WebSearchConfig(varWebSearchConfig)

	return err
}

type NullableWebSearchConfig struct {
	value *WebSearchConfig
	isSet bool
}

func (v NullableWebSearchConfig) Get() *WebSearchConfig {
	return v.value
}

func (v *NullableWebSearchConfig) Set(val *WebSearchConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableWebSearchConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableWebSearchConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebSearchConfig(val *WebSearchConfig) *NullableWebSearchConfig {
	return &NullableWebSearchConfig{value: val, isSet: true}
}

func (v NullableWebSearchConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebSearchConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


