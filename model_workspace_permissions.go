/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the WorkspacePermissions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkspacePermissions{}

// WorkspacePermissions struct for WorkspacePermissions
type WorkspacePermissions struct {
	Models *bool `json:"models,omitempty"`
	Knowledge *bool `json:"knowledge,omitempty"`
	Prompts *bool `json:"prompts,omitempty"`
	Tools *bool `json:"tools,omitempty"`
}

// NewWorkspacePermissions instantiates a new WorkspacePermissions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkspacePermissions() *WorkspacePermissions {
	this := WorkspacePermissions{}
	var models bool = false
	this.Models = &models
	var knowledge bool = false
	this.Knowledge = &knowledge
	var prompts bool = false
	this.Prompts = &prompts
	var tools bool = false
	this.Tools = &tools
	return &this
}

// NewWorkspacePermissionsWithDefaults instantiates a new WorkspacePermissions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkspacePermissionsWithDefaults() *WorkspacePermissions {
	this := WorkspacePermissions{}
	var models bool = false
	this.Models = &models
	var knowledge bool = false
	this.Knowledge = &knowledge
	var prompts bool = false
	this.Prompts = &prompts
	var tools bool = false
	this.Tools = &tools
	return &this
}

// GetModels returns the Models field value if set, zero value otherwise.
func (o *WorkspacePermissions) GetModels() bool {
	if o == nil || IsNil(o.Models) {
		var ret bool
		return ret
	}
	return *o.Models
}

// GetModelsOk returns a tuple with the Models field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspacePermissions) GetModelsOk() (*bool, bool) {
	if o == nil || IsNil(o.Models) {
		return nil, false
	}
	return o.Models, true
}

// HasModels returns a boolean if a field has been set.
func (o *WorkspacePermissions) HasModels() bool {
	if o != nil && !IsNil(o.Models) {
		return true
	}

	return false
}

// SetModels gets a reference to the given bool and assigns it to the Models field.
func (o *WorkspacePermissions) SetModels(v bool) {
	o.Models = &v
}

// GetKnowledge returns the Knowledge field value if set, zero value otherwise.
func (o *WorkspacePermissions) GetKnowledge() bool {
	if o == nil || IsNil(o.Knowledge) {
		var ret bool
		return ret
	}
	return *o.Knowledge
}

// GetKnowledgeOk returns a tuple with the Knowledge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspacePermissions) GetKnowledgeOk() (*bool, bool) {
	if o == nil || IsNil(o.Knowledge) {
		return nil, false
	}
	return o.Knowledge, true
}

// HasKnowledge returns a boolean if a field has been set.
func (o *WorkspacePermissions) HasKnowledge() bool {
	if o != nil && !IsNil(o.Knowledge) {
		return true
	}

	return false
}

// SetKnowledge gets a reference to the given bool and assigns it to the Knowledge field.
func (o *WorkspacePermissions) SetKnowledge(v bool) {
	o.Knowledge = &v
}

// GetPrompts returns the Prompts field value if set, zero value otherwise.
func (o *WorkspacePermissions) GetPrompts() bool {
	if o == nil || IsNil(o.Prompts) {
		var ret bool
		return ret
	}
	return *o.Prompts
}

// GetPromptsOk returns a tuple with the Prompts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspacePermissions) GetPromptsOk() (*bool, bool) {
	if o == nil || IsNil(o.Prompts) {
		return nil, false
	}
	return o.Prompts, true
}

// HasPrompts returns a boolean if a field has been set.
func (o *WorkspacePermissions) HasPrompts() bool {
	if o != nil && !IsNil(o.Prompts) {
		return true
	}

	return false
}

// SetPrompts gets a reference to the given bool and assigns it to the Prompts field.
func (o *WorkspacePermissions) SetPrompts(v bool) {
	o.Prompts = &v
}

// GetTools returns the Tools field value if set, zero value otherwise.
func (o *WorkspacePermissions) GetTools() bool {
	if o == nil || IsNil(o.Tools) {
		var ret bool
		return ret
	}
	return *o.Tools
}

// GetToolsOk returns a tuple with the Tools field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspacePermissions) GetToolsOk() (*bool, bool) {
	if o == nil || IsNil(o.Tools) {
		return nil, false
	}
	return o.Tools, true
}

// HasTools returns a boolean if a field has been set.
func (o *WorkspacePermissions) HasTools() bool {
	if o != nil && !IsNil(o.Tools) {
		return true
	}

	return false
}

// SetTools gets a reference to the given bool and assigns it to the Tools field.
func (o *WorkspacePermissions) SetTools(v bool) {
	o.Tools = &v
}

func (o WorkspacePermissions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkspacePermissions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Models) {
		toSerialize["models"] = o.Models
	}
	if !IsNil(o.Knowledge) {
		toSerialize["knowledge"] = o.Knowledge
	}
	if !IsNil(o.Prompts) {
		toSerialize["prompts"] = o.Prompts
	}
	if !IsNil(o.Tools) {
		toSerialize["tools"] = o.Tools
	}
	return toSerialize, nil
}

type NullableWorkspacePermissions struct {
	value *WorkspacePermissions
	isSet bool
}

func (v NullableWorkspacePermissions) Get() *WorkspacePermissions {
	return v.value
}

func (v *NullableWorkspacePermissions) Set(val *WorkspacePermissions) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkspacePermissions) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkspacePermissions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkspacePermissions(val *WorkspacePermissions) *NullableWorkspacePermissions {
	return &NullableWorkspacePermissions{value: val, isSet: true}
}

func (v NullableWorkspacePermissions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkspacePermissions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


