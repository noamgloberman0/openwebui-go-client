/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the STTConfigForm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &STTConfigForm{}

// STTConfigForm struct for STTConfigForm
type STTConfigForm struct {
	OPENAI_API_BASE_URL string `json:"OPENAI_API_BASE_URL"`
	OPENAI_API_KEY string `json:"OPENAI_API_KEY"`
	ENGINE string `json:"ENGINE"`
	MODEL string `json:"MODEL"`
	WHISPER_MODEL string `json:"WHISPER_MODEL"`
	DEEPGRAM_API_KEY string `json:"DEEPGRAM_API_KEY"`
}

type _STTConfigForm STTConfigForm

// NewSTTConfigForm instantiates a new STTConfigForm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSTTConfigForm(oPENAIAPIBASEURL string, oPENAIAPIKEY string, eNGINE string, mODEL string, wHISPERMODEL string, dEEPGRAMAPIKEY string) *STTConfigForm {
	this := STTConfigForm{}
	this.OPENAI_API_BASE_URL = oPENAIAPIBASEURL
	this.OPENAI_API_KEY = oPENAIAPIKEY
	this.ENGINE = eNGINE
	this.MODEL = mODEL
	this.WHISPER_MODEL = wHISPERMODEL
	this.DEEPGRAM_API_KEY = dEEPGRAMAPIKEY
	return &this
}

// NewSTTConfigFormWithDefaults instantiates a new STTConfigForm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSTTConfigFormWithDefaults() *STTConfigForm {
	this := STTConfigForm{}
	return &this
}

// GetOPENAI_API_BASE_URL returns the OPENAI_API_BASE_URL field value
func (o *STTConfigForm) GetOPENAI_API_BASE_URL() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OPENAI_API_BASE_URL
}

// GetOPENAI_API_BASE_URLOk returns a tuple with the OPENAI_API_BASE_URL field value
// and a boolean to check if the value has been set.
func (o *STTConfigForm) GetOPENAI_API_BASE_URLOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OPENAI_API_BASE_URL, true
}

// SetOPENAI_API_BASE_URL sets field value
func (o *STTConfigForm) SetOPENAI_API_BASE_URL(v string) {
	o.OPENAI_API_BASE_URL = v
}

// GetOPENAI_API_KEY returns the OPENAI_API_KEY field value
func (o *STTConfigForm) GetOPENAI_API_KEY() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OPENAI_API_KEY
}

// GetOPENAI_API_KEYOk returns a tuple with the OPENAI_API_KEY field value
// and a boolean to check if the value has been set.
func (o *STTConfigForm) GetOPENAI_API_KEYOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OPENAI_API_KEY, true
}

// SetOPENAI_API_KEY sets field value
func (o *STTConfigForm) SetOPENAI_API_KEY(v string) {
	o.OPENAI_API_KEY = v
}

// GetENGINE returns the ENGINE field value
func (o *STTConfigForm) GetENGINE() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ENGINE
}

// GetENGINEOk returns a tuple with the ENGINE field value
// and a boolean to check if the value has been set.
func (o *STTConfigForm) GetENGINEOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ENGINE, true
}

// SetENGINE sets field value
func (o *STTConfigForm) SetENGINE(v string) {
	o.ENGINE = v
}

// GetMODEL returns the MODEL field value
func (o *STTConfigForm) GetMODEL() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MODEL
}

// GetMODELOk returns a tuple with the MODEL field value
// and a boolean to check if the value has been set.
func (o *STTConfigForm) GetMODELOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MODEL, true
}

// SetMODEL sets field value
func (o *STTConfigForm) SetMODEL(v string) {
	o.MODEL = v
}

// GetWHISPER_MODEL returns the WHISPER_MODEL field value
func (o *STTConfigForm) GetWHISPER_MODEL() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WHISPER_MODEL
}

// GetWHISPER_MODELOk returns a tuple with the WHISPER_MODEL field value
// and a boolean to check if the value has been set.
func (o *STTConfigForm) GetWHISPER_MODELOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WHISPER_MODEL, true
}

// SetWHISPER_MODEL sets field value
func (o *STTConfigForm) SetWHISPER_MODEL(v string) {
	o.WHISPER_MODEL = v
}

// GetDEEPGRAM_API_KEY returns the DEEPGRAM_API_KEY field value
func (o *STTConfigForm) GetDEEPGRAM_API_KEY() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DEEPGRAM_API_KEY
}

// GetDEEPGRAM_API_KEYOk returns a tuple with the DEEPGRAM_API_KEY field value
// and a boolean to check if the value has been set.
func (o *STTConfigForm) GetDEEPGRAM_API_KEYOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DEEPGRAM_API_KEY, true
}

// SetDEEPGRAM_API_KEY sets field value
func (o *STTConfigForm) SetDEEPGRAM_API_KEY(v string) {
	o.DEEPGRAM_API_KEY = v
}

func (o STTConfigForm) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o STTConfigForm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["OPENAI_API_BASE_URL"] = o.OPENAI_API_BASE_URL
	toSerialize["OPENAI_API_KEY"] = o.OPENAI_API_KEY
	toSerialize["ENGINE"] = o.ENGINE
	toSerialize["MODEL"] = o.MODEL
	toSerialize["WHISPER_MODEL"] = o.WHISPER_MODEL
	toSerialize["DEEPGRAM_API_KEY"] = o.DEEPGRAM_API_KEY
	return toSerialize, nil
}

func (o *STTConfigForm) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"OPENAI_API_BASE_URL",
		"OPENAI_API_KEY",
		"ENGINE",
		"MODEL",
		"WHISPER_MODEL",
		"DEEPGRAM_API_KEY",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSTTConfigForm := _STTConfigForm{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSTTConfigForm)

	if err != nil {
		return err
	}

	*o = STTConfigForm(varSTTConfigForm)

	return err
}

type NullableSTTConfigForm struct {
	value *STTConfigForm
	isSet bool
}

func (v NullableSTTConfigForm) Get() *STTConfigForm {
	return v.value
}

func (v *NullableSTTConfigForm) Set(val *STTConfigForm) {
	v.value = val
	v.isSet = true
}

func (v NullableSTTConfigForm) IsSet() bool {
	return v.isSet
}

func (v *NullableSTTConfigForm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSTTConfigForm(val *STTConfigForm) *NullableSTTConfigForm {
	return &NullableSTTConfigForm{value: val, isSet: true}
}

func (v NullableSTTConfigForm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSTTConfigForm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


