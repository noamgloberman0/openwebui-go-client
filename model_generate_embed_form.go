/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GenerateEmbedForm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GenerateEmbedForm{}

// GenerateEmbedForm struct for GenerateEmbedForm
type GenerateEmbedForm struct {
	Model string `json:"model"`
	Input Input `json:"input"`
	Truncate NullableBool `json:"truncate,omitempty"`
	Options map[string]interface{} `json:"options,omitempty"`
	KeepAlive NullableKeepAlive `json:"keep_alive,omitempty"`
}

type _GenerateEmbedForm GenerateEmbedForm

// NewGenerateEmbedForm instantiates a new GenerateEmbedForm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenerateEmbedForm(model string, input Input) *GenerateEmbedForm {
	this := GenerateEmbedForm{}
	this.Model = model
	this.Input = input
	return &this
}

// NewGenerateEmbedFormWithDefaults instantiates a new GenerateEmbedForm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenerateEmbedFormWithDefaults() *GenerateEmbedForm {
	this := GenerateEmbedForm{}
	return &this
}

// GetModel returns the Model field value
func (o *GenerateEmbedForm) GetModel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Model
}

// GetModelOk returns a tuple with the Model field value
// and a boolean to check if the value has been set.
func (o *GenerateEmbedForm) GetModelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Model, true
}

// SetModel sets field value
func (o *GenerateEmbedForm) SetModel(v string) {
	o.Model = v
}

// GetInput returns the Input field value
func (o *GenerateEmbedForm) GetInput() Input {
	if o == nil {
		var ret Input
		return ret
	}

	return o.Input
}

// GetInputOk returns a tuple with the Input field value
// and a boolean to check if the value has been set.
func (o *GenerateEmbedForm) GetInputOk() (*Input, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Input, true
}

// SetInput sets field value
func (o *GenerateEmbedForm) SetInput(v Input) {
	o.Input = v
}

// GetTruncate returns the Truncate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GenerateEmbedForm) GetTruncate() bool {
	if o == nil || IsNil(o.Truncate.Get()) {
		var ret bool
		return ret
	}
	return *o.Truncate.Get()
}

// GetTruncateOk returns a tuple with the Truncate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GenerateEmbedForm) GetTruncateOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Truncate.Get(), o.Truncate.IsSet()
}

// HasTruncate returns a boolean if a field has been set.
func (o *GenerateEmbedForm) HasTruncate() bool {
	if o != nil && o.Truncate.IsSet() {
		return true
	}

	return false
}

// SetTruncate gets a reference to the given NullableBool and assigns it to the Truncate field.
func (o *GenerateEmbedForm) SetTruncate(v bool) {
	o.Truncate.Set(&v)
}
// SetTruncateNil sets the value for Truncate to be an explicit nil
func (o *GenerateEmbedForm) SetTruncateNil() {
	o.Truncate.Set(nil)
}

// UnsetTruncate ensures that no value is present for Truncate, not even an explicit nil
func (o *GenerateEmbedForm) UnsetTruncate() {
	o.Truncate.Unset()
}

// GetOptions returns the Options field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GenerateEmbedForm) GetOptions() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GenerateEmbedForm) GetOptionsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Options) {
		return map[string]interface{}{}, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *GenerateEmbedForm) HasOptions() bool {
	if o != nil && !IsNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given map[string]interface{} and assigns it to the Options field.
func (o *GenerateEmbedForm) SetOptions(v map[string]interface{}) {
	o.Options = v
}

// GetKeepAlive returns the KeepAlive field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GenerateEmbedForm) GetKeepAlive() KeepAlive {
	if o == nil || IsNil(o.KeepAlive.Get()) {
		var ret KeepAlive
		return ret
	}
	return *o.KeepAlive.Get()
}

// GetKeepAliveOk returns a tuple with the KeepAlive field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GenerateEmbedForm) GetKeepAliveOk() (*KeepAlive, bool) {
	if o == nil {
		return nil, false
	}
	return o.KeepAlive.Get(), o.KeepAlive.IsSet()
}

// HasKeepAlive returns a boolean if a field has been set.
func (o *GenerateEmbedForm) HasKeepAlive() bool {
	if o != nil && o.KeepAlive.IsSet() {
		return true
	}

	return false
}

// SetKeepAlive gets a reference to the given NullableKeepAlive and assigns it to the KeepAlive field.
func (o *GenerateEmbedForm) SetKeepAlive(v KeepAlive) {
	o.KeepAlive.Set(&v)
}
// SetKeepAliveNil sets the value for KeepAlive to be an explicit nil
func (o *GenerateEmbedForm) SetKeepAliveNil() {
	o.KeepAlive.Set(nil)
}

// UnsetKeepAlive ensures that no value is present for KeepAlive, not even an explicit nil
func (o *GenerateEmbedForm) UnsetKeepAlive() {
	o.KeepAlive.Unset()
}

func (o GenerateEmbedForm) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GenerateEmbedForm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["model"] = o.Model
	toSerialize["input"] = o.Input
	if o.Truncate.IsSet() {
		toSerialize["truncate"] = o.Truncate.Get()
	}
	if o.Options != nil {
		toSerialize["options"] = o.Options
	}
	if o.KeepAlive.IsSet() {
		toSerialize["keep_alive"] = o.KeepAlive.Get()
	}
	return toSerialize, nil
}

func (o *GenerateEmbedForm) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"model",
		"input",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGenerateEmbedForm := _GenerateEmbedForm{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGenerateEmbedForm)

	if err != nil {
		return err
	}

	*o = GenerateEmbedForm(varGenerateEmbedForm)

	return err
}

type NullableGenerateEmbedForm struct {
	value *GenerateEmbedForm
	isSet bool
}

func (v NullableGenerateEmbedForm) Get() *GenerateEmbedForm {
	return v.value
}

func (v *NullableGenerateEmbedForm) Set(val *GenerateEmbedForm) {
	v.value = val
	v.isSet = true
}

func (v NullableGenerateEmbedForm) IsSet() bool {
	return v.isSet
}

func (v *NullableGenerateEmbedForm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenerateEmbedForm(val *GenerateEmbedForm) *NullableGenerateEmbedForm {
	return &NullableGenerateEmbedForm{value: val, isSet: true}
}

func (v NullableGenerateEmbedForm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenerateEmbedForm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


