/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PushModelForm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PushModelForm{}

// PushModelForm struct for PushModelForm
type PushModelForm struct {
	Name string `json:"name"`
	Insecure NullableBool `json:"insecure,omitempty"`
	Stream NullableBool `json:"stream,omitempty"`
}

type _PushModelForm PushModelForm

// NewPushModelForm instantiates a new PushModelForm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPushModelForm(name string) *PushModelForm {
	this := PushModelForm{}
	this.Name = name
	return &this
}

// NewPushModelFormWithDefaults instantiates a new PushModelForm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPushModelFormWithDefaults() *PushModelForm {
	this := PushModelForm{}
	return &this
}

// GetName returns the Name field value
func (o *PushModelForm) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PushModelForm) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PushModelForm) SetName(v string) {
	o.Name = v
}

// GetInsecure returns the Insecure field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PushModelForm) GetInsecure() bool {
	if o == nil || IsNil(o.Insecure.Get()) {
		var ret bool
		return ret
	}
	return *o.Insecure.Get()
}

// GetInsecureOk returns a tuple with the Insecure field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PushModelForm) GetInsecureOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Insecure.Get(), o.Insecure.IsSet()
}

// HasInsecure returns a boolean if a field has been set.
func (o *PushModelForm) HasInsecure() bool {
	if o != nil && o.Insecure.IsSet() {
		return true
	}

	return false
}

// SetInsecure gets a reference to the given NullableBool and assigns it to the Insecure field.
func (o *PushModelForm) SetInsecure(v bool) {
	o.Insecure.Set(&v)
}
// SetInsecureNil sets the value for Insecure to be an explicit nil
func (o *PushModelForm) SetInsecureNil() {
	o.Insecure.Set(nil)
}

// UnsetInsecure ensures that no value is present for Insecure, not even an explicit nil
func (o *PushModelForm) UnsetInsecure() {
	o.Insecure.Unset()
}

// GetStream returns the Stream field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PushModelForm) GetStream() bool {
	if o == nil || IsNil(o.Stream.Get()) {
		var ret bool
		return ret
	}
	return *o.Stream.Get()
}

// GetStreamOk returns a tuple with the Stream field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PushModelForm) GetStreamOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Stream.Get(), o.Stream.IsSet()
}

// HasStream returns a boolean if a field has been set.
func (o *PushModelForm) HasStream() bool {
	if o != nil && o.Stream.IsSet() {
		return true
	}

	return false
}

// SetStream gets a reference to the given NullableBool and assigns it to the Stream field.
func (o *PushModelForm) SetStream(v bool) {
	o.Stream.Set(&v)
}
// SetStreamNil sets the value for Stream to be an explicit nil
func (o *PushModelForm) SetStreamNil() {
	o.Stream.Set(nil)
}

// UnsetStream ensures that no value is present for Stream, not even an explicit nil
func (o *PushModelForm) UnsetStream() {
	o.Stream.Unset()
}

func (o PushModelForm) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PushModelForm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if o.Insecure.IsSet() {
		toSerialize["insecure"] = o.Insecure.Get()
	}
	if o.Stream.IsSet() {
		toSerialize["stream"] = o.Stream.Get()
	}
	return toSerialize, nil
}

func (o *PushModelForm) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPushModelForm := _PushModelForm{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPushModelForm)

	if err != nil {
		return err
	}

	*o = PushModelForm(varPushModelForm)

	return err
}

type NullablePushModelForm struct {
	value *PushModelForm
	isSet bool
}

func (v NullablePushModelForm) Get() *PushModelForm {
	return v.value
}

func (v *NullablePushModelForm) Set(val *PushModelForm) {
	v.value = val
	v.isSet = true
}

func (v NullablePushModelForm) IsSet() bool {
	return v.isSet
}

func (v *NullablePushModelForm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePushModelForm(val *PushModelForm) *NullablePushModelForm {
	return &NullablePushModelForm{value: val, isSet: true}
}

func (v NullablePushModelForm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePushModelForm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


