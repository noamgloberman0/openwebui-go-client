/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConfigUpdateForm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigUpdateForm{}

// ConfigUpdateForm struct for ConfigUpdateForm
type ConfigUpdateForm struct {
	RAG_FULL_CONTEXT NullableBool `json:"RAG_FULL_CONTEXT,omitempty"`
	BYPASS_EMBEDDING_AND_RETRIEVAL NullableBool `json:"BYPASS_EMBEDDING_AND_RETRIEVAL,omitempty"`
	PdfExtractImages NullableBool `json:"pdf_extract_images,omitempty"`
	EnableGoogleDriveIntegration NullableBool `json:"enable_google_drive_integration,omitempty"`
	EnableOnedriveIntegration NullableBool `json:"enable_onedrive_integration,omitempty"`
	File NullableFileConfig `json:"file,omitempty"`
	ContentExtraction NullableContentExtractionConfig `json:"content_extraction,omitempty"`
	Chunk NullableChunkParamUpdateForm `json:"chunk,omitempty"`
	Youtube NullableYoutubeLoaderConfig `json:"youtube,omitempty"`
	Web NullableWebConfig `json:"web,omitempty"`
}

// NewConfigUpdateForm instantiates a new ConfigUpdateForm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigUpdateForm() *ConfigUpdateForm {
	this := ConfigUpdateForm{}
	return &this
}

// NewConfigUpdateFormWithDefaults instantiates a new ConfigUpdateForm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigUpdateFormWithDefaults() *ConfigUpdateForm {
	this := ConfigUpdateForm{}
	return &this
}

// GetRAG_FULL_CONTEXT returns the RAG_FULL_CONTEXT field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigUpdateForm) GetRAG_FULL_CONTEXT() bool {
	if o == nil || IsNil(o.RAG_FULL_CONTEXT.Get()) {
		var ret bool
		return ret
	}
	return *o.RAG_FULL_CONTEXT.Get()
}

// GetRAG_FULL_CONTEXTOk returns a tuple with the RAG_FULL_CONTEXT field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigUpdateForm) GetRAG_FULL_CONTEXTOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RAG_FULL_CONTEXT.Get(), o.RAG_FULL_CONTEXT.IsSet()
}

// HasRAG_FULL_CONTEXT returns a boolean if a field has been set.
func (o *ConfigUpdateForm) HasRAG_FULL_CONTEXT() bool {
	if o != nil && o.RAG_FULL_CONTEXT.IsSet() {
		return true
	}

	return false
}

// SetRAG_FULL_CONTEXT gets a reference to the given NullableBool and assigns it to the RAG_FULL_CONTEXT field.
func (o *ConfigUpdateForm) SetRAG_FULL_CONTEXT(v bool) {
	o.RAG_FULL_CONTEXT.Set(&v)
}
// SetRAG_FULL_CONTEXTNil sets the value for RAG_FULL_CONTEXT to be an explicit nil
func (o *ConfigUpdateForm) SetRAG_FULL_CONTEXTNil() {
	o.RAG_FULL_CONTEXT.Set(nil)
}

// UnsetRAG_FULL_CONTEXT ensures that no value is present for RAG_FULL_CONTEXT, not even an explicit nil
func (o *ConfigUpdateForm) UnsetRAG_FULL_CONTEXT() {
	o.RAG_FULL_CONTEXT.Unset()
}

// GetBYPASS_EMBEDDING_AND_RETRIEVAL returns the BYPASS_EMBEDDING_AND_RETRIEVAL field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigUpdateForm) GetBYPASS_EMBEDDING_AND_RETRIEVAL() bool {
	if o == nil || IsNil(o.BYPASS_EMBEDDING_AND_RETRIEVAL.Get()) {
		var ret bool
		return ret
	}
	return *o.BYPASS_EMBEDDING_AND_RETRIEVAL.Get()
}

// GetBYPASS_EMBEDDING_AND_RETRIEVALOk returns a tuple with the BYPASS_EMBEDDING_AND_RETRIEVAL field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigUpdateForm) GetBYPASS_EMBEDDING_AND_RETRIEVALOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.BYPASS_EMBEDDING_AND_RETRIEVAL.Get(), o.BYPASS_EMBEDDING_AND_RETRIEVAL.IsSet()
}

// HasBYPASS_EMBEDDING_AND_RETRIEVAL returns a boolean if a field has been set.
func (o *ConfigUpdateForm) HasBYPASS_EMBEDDING_AND_RETRIEVAL() bool {
	if o != nil && o.BYPASS_EMBEDDING_AND_RETRIEVAL.IsSet() {
		return true
	}

	return false
}

// SetBYPASS_EMBEDDING_AND_RETRIEVAL gets a reference to the given NullableBool and assigns it to the BYPASS_EMBEDDING_AND_RETRIEVAL field.
func (o *ConfigUpdateForm) SetBYPASS_EMBEDDING_AND_RETRIEVAL(v bool) {
	o.BYPASS_EMBEDDING_AND_RETRIEVAL.Set(&v)
}
// SetBYPASS_EMBEDDING_AND_RETRIEVALNil sets the value for BYPASS_EMBEDDING_AND_RETRIEVAL to be an explicit nil
func (o *ConfigUpdateForm) SetBYPASS_EMBEDDING_AND_RETRIEVALNil() {
	o.BYPASS_EMBEDDING_AND_RETRIEVAL.Set(nil)
}

// UnsetBYPASS_EMBEDDING_AND_RETRIEVAL ensures that no value is present for BYPASS_EMBEDDING_AND_RETRIEVAL, not even an explicit nil
func (o *ConfigUpdateForm) UnsetBYPASS_EMBEDDING_AND_RETRIEVAL() {
	o.BYPASS_EMBEDDING_AND_RETRIEVAL.Unset()
}

// GetPdfExtractImages returns the PdfExtractImages field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigUpdateForm) GetPdfExtractImages() bool {
	if o == nil || IsNil(o.PdfExtractImages.Get()) {
		var ret bool
		return ret
	}
	return *o.PdfExtractImages.Get()
}

// GetPdfExtractImagesOk returns a tuple with the PdfExtractImages field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigUpdateForm) GetPdfExtractImagesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.PdfExtractImages.Get(), o.PdfExtractImages.IsSet()
}

// HasPdfExtractImages returns a boolean if a field has been set.
func (o *ConfigUpdateForm) HasPdfExtractImages() bool {
	if o != nil && o.PdfExtractImages.IsSet() {
		return true
	}

	return false
}

// SetPdfExtractImages gets a reference to the given NullableBool and assigns it to the PdfExtractImages field.
func (o *ConfigUpdateForm) SetPdfExtractImages(v bool) {
	o.PdfExtractImages.Set(&v)
}
// SetPdfExtractImagesNil sets the value for PdfExtractImages to be an explicit nil
func (o *ConfigUpdateForm) SetPdfExtractImagesNil() {
	o.PdfExtractImages.Set(nil)
}

// UnsetPdfExtractImages ensures that no value is present for PdfExtractImages, not even an explicit nil
func (o *ConfigUpdateForm) UnsetPdfExtractImages() {
	o.PdfExtractImages.Unset()
}

// GetEnableGoogleDriveIntegration returns the EnableGoogleDriveIntegration field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigUpdateForm) GetEnableGoogleDriveIntegration() bool {
	if o == nil || IsNil(o.EnableGoogleDriveIntegration.Get()) {
		var ret bool
		return ret
	}
	return *o.EnableGoogleDriveIntegration.Get()
}

// GetEnableGoogleDriveIntegrationOk returns a tuple with the EnableGoogleDriveIntegration field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigUpdateForm) GetEnableGoogleDriveIntegrationOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnableGoogleDriveIntegration.Get(), o.EnableGoogleDriveIntegration.IsSet()
}

// HasEnableGoogleDriveIntegration returns a boolean if a field has been set.
func (o *ConfigUpdateForm) HasEnableGoogleDriveIntegration() bool {
	if o != nil && o.EnableGoogleDriveIntegration.IsSet() {
		return true
	}

	return false
}

// SetEnableGoogleDriveIntegration gets a reference to the given NullableBool and assigns it to the EnableGoogleDriveIntegration field.
func (o *ConfigUpdateForm) SetEnableGoogleDriveIntegration(v bool) {
	o.EnableGoogleDriveIntegration.Set(&v)
}
// SetEnableGoogleDriveIntegrationNil sets the value for EnableGoogleDriveIntegration to be an explicit nil
func (o *ConfigUpdateForm) SetEnableGoogleDriveIntegrationNil() {
	o.EnableGoogleDriveIntegration.Set(nil)
}

// UnsetEnableGoogleDriveIntegration ensures that no value is present for EnableGoogleDriveIntegration, not even an explicit nil
func (o *ConfigUpdateForm) UnsetEnableGoogleDriveIntegration() {
	o.EnableGoogleDriveIntegration.Unset()
}

// GetEnableOnedriveIntegration returns the EnableOnedriveIntegration field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigUpdateForm) GetEnableOnedriveIntegration() bool {
	if o == nil || IsNil(o.EnableOnedriveIntegration.Get()) {
		var ret bool
		return ret
	}
	return *o.EnableOnedriveIntegration.Get()
}

// GetEnableOnedriveIntegrationOk returns a tuple with the EnableOnedriveIntegration field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigUpdateForm) GetEnableOnedriveIntegrationOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnableOnedriveIntegration.Get(), o.EnableOnedriveIntegration.IsSet()
}

// HasEnableOnedriveIntegration returns a boolean if a field has been set.
func (o *ConfigUpdateForm) HasEnableOnedriveIntegration() bool {
	if o != nil && o.EnableOnedriveIntegration.IsSet() {
		return true
	}

	return false
}

// SetEnableOnedriveIntegration gets a reference to the given NullableBool and assigns it to the EnableOnedriveIntegration field.
func (o *ConfigUpdateForm) SetEnableOnedriveIntegration(v bool) {
	o.EnableOnedriveIntegration.Set(&v)
}
// SetEnableOnedriveIntegrationNil sets the value for EnableOnedriveIntegration to be an explicit nil
func (o *ConfigUpdateForm) SetEnableOnedriveIntegrationNil() {
	o.EnableOnedriveIntegration.Set(nil)
}

// UnsetEnableOnedriveIntegration ensures that no value is present for EnableOnedriveIntegration, not even an explicit nil
func (o *ConfigUpdateForm) UnsetEnableOnedriveIntegration() {
	o.EnableOnedriveIntegration.Unset()
}

// GetFile returns the File field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigUpdateForm) GetFile() FileConfig {
	if o == nil || IsNil(o.File.Get()) {
		var ret FileConfig
		return ret
	}
	return *o.File.Get()
}

// GetFileOk returns a tuple with the File field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigUpdateForm) GetFileOk() (*FileConfig, bool) {
	if o == nil {
		return nil, false
	}
	return o.File.Get(), o.File.IsSet()
}

// HasFile returns a boolean if a field has been set.
func (o *ConfigUpdateForm) HasFile() bool {
	if o != nil && o.File.IsSet() {
		return true
	}

	return false
}

// SetFile gets a reference to the given NullableFileConfig and assigns it to the File field.
func (o *ConfigUpdateForm) SetFile(v FileConfig) {
	o.File.Set(&v)
}
// SetFileNil sets the value for File to be an explicit nil
func (o *ConfigUpdateForm) SetFileNil() {
	o.File.Set(nil)
}

// UnsetFile ensures that no value is present for File, not even an explicit nil
func (o *ConfigUpdateForm) UnsetFile() {
	o.File.Unset()
}

// GetContentExtraction returns the ContentExtraction field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigUpdateForm) GetContentExtraction() ContentExtractionConfig {
	if o == nil || IsNil(o.ContentExtraction.Get()) {
		var ret ContentExtractionConfig
		return ret
	}
	return *o.ContentExtraction.Get()
}

// GetContentExtractionOk returns a tuple with the ContentExtraction field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigUpdateForm) GetContentExtractionOk() (*ContentExtractionConfig, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContentExtraction.Get(), o.ContentExtraction.IsSet()
}

// HasContentExtraction returns a boolean if a field has been set.
func (o *ConfigUpdateForm) HasContentExtraction() bool {
	if o != nil && o.ContentExtraction.IsSet() {
		return true
	}

	return false
}

// SetContentExtraction gets a reference to the given NullableContentExtractionConfig and assigns it to the ContentExtraction field.
func (o *ConfigUpdateForm) SetContentExtraction(v ContentExtractionConfig) {
	o.ContentExtraction.Set(&v)
}
// SetContentExtractionNil sets the value for ContentExtraction to be an explicit nil
func (o *ConfigUpdateForm) SetContentExtractionNil() {
	o.ContentExtraction.Set(nil)
}

// UnsetContentExtraction ensures that no value is present for ContentExtraction, not even an explicit nil
func (o *ConfigUpdateForm) UnsetContentExtraction() {
	o.ContentExtraction.Unset()
}

// GetChunk returns the Chunk field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigUpdateForm) GetChunk() ChunkParamUpdateForm {
	if o == nil || IsNil(o.Chunk.Get()) {
		var ret ChunkParamUpdateForm
		return ret
	}
	return *o.Chunk.Get()
}

// GetChunkOk returns a tuple with the Chunk field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigUpdateForm) GetChunkOk() (*ChunkParamUpdateForm, bool) {
	if o == nil {
		return nil, false
	}
	return o.Chunk.Get(), o.Chunk.IsSet()
}

// HasChunk returns a boolean if a field has been set.
func (o *ConfigUpdateForm) HasChunk() bool {
	if o != nil && o.Chunk.IsSet() {
		return true
	}

	return false
}

// SetChunk gets a reference to the given NullableChunkParamUpdateForm and assigns it to the Chunk field.
func (o *ConfigUpdateForm) SetChunk(v ChunkParamUpdateForm) {
	o.Chunk.Set(&v)
}
// SetChunkNil sets the value for Chunk to be an explicit nil
func (o *ConfigUpdateForm) SetChunkNil() {
	o.Chunk.Set(nil)
}

// UnsetChunk ensures that no value is present for Chunk, not even an explicit nil
func (o *ConfigUpdateForm) UnsetChunk() {
	o.Chunk.Unset()
}

// GetYoutube returns the Youtube field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigUpdateForm) GetYoutube() YoutubeLoaderConfig {
	if o == nil || IsNil(o.Youtube.Get()) {
		var ret YoutubeLoaderConfig
		return ret
	}
	return *o.Youtube.Get()
}

// GetYoutubeOk returns a tuple with the Youtube field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigUpdateForm) GetYoutubeOk() (*YoutubeLoaderConfig, bool) {
	if o == nil {
		return nil, false
	}
	return o.Youtube.Get(), o.Youtube.IsSet()
}

// HasYoutube returns a boolean if a field has been set.
func (o *ConfigUpdateForm) HasYoutube() bool {
	if o != nil && o.Youtube.IsSet() {
		return true
	}

	return false
}

// SetYoutube gets a reference to the given NullableYoutubeLoaderConfig and assigns it to the Youtube field.
func (o *ConfigUpdateForm) SetYoutube(v YoutubeLoaderConfig) {
	o.Youtube.Set(&v)
}
// SetYoutubeNil sets the value for Youtube to be an explicit nil
func (o *ConfigUpdateForm) SetYoutubeNil() {
	o.Youtube.Set(nil)
}

// UnsetYoutube ensures that no value is present for Youtube, not even an explicit nil
func (o *ConfigUpdateForm) UnsetYoutube() {
	o.Youtube.Unset()
}

// GetWeb returns the Web field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigUpdateForm) GetWeb() WebConfig {
	if o == nil || IsNil(o.Web.Get()) {
		var ret WebConfig
		return ret
	}
	return *o.Web.Get()
}

// GetWebOk returns a tuple with the Web field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigUpdateForm) GetWebOk() (*WebConfig, bool) {
	if o == nil {
		return nil, false
	}
	return o.Web.Get(), o.Web.IsSet()
}

// HasWeb returns a boolean if a field has been set.
func (o *ConfigUpdateForm) HasWeb() bool {
	if o != nil && o.Web.IsSet() {
		return true
	}

	return false
}

// SetWeb gets a reference to the given NullableWebConfig and assigns it to the Web field.
func (o *ConfigUpdateForm) SetWeb(v WebConfig) {
	o.Web.Set(&v)
}
// SetWebNil sets the value for Web to be an explicit nil
func (o *ConfigUpdateForm) SetWebNil() {
	o.Web.Set(nil)
}

// UnsetWeb ensures that no value is present for Web, not even an explicit nil
func (o *ConfigUpdateForm) UnsetWeb() {
	o.Web.Unset()
}

func (o ConfigUpdateForm) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigUpdateForm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.RAG_FULL_CONTEXT.IsSet() {
		toSerialize["RAG_FULL_CONTEXT"] = o.RAG_FULL_CONTEXT.Get()
	}
	if o.BYPASS_EMBEDDING_AND_RETRIEVAL.IsSet() {
		toSerialize["BYPASS_EMBEDDING_AND_RETRIEVAL"] = o.BYPASS_EMBEDDING_AND_RETRIEVAL.Get()
	}
	if o.PdfExtractImages.IsSet() {
		toSerialize["pdf_extract_images"] = o.PdfExtractImages.Get()
	}
	if o.EnableGoogleDriveIntegration.IsSet() {
		toSerialize["enable_google_drive_integration"] = o.EnableGoogleDriveIntegration.Get()
	}
	if o.EnableOnedriveIntegration.IsSet() {
		toSerialize["enable_onedrive_integration"] = o.EnableOnedriveIntegration.Get()
	}
	if o.File.IsSet() {
		toSerialize["file"] = o.File.Get()
	}
	if o.ContentExtraction.IsSet() {
		toSerialize["content_extraction"] = o.ContentExtraction.Get()
	}
	if o.Chunk.IsSet() {
		toSerialize["chunk"] = o.Chunk.Get()
	}
	if o.Youtube.IsSet() {
		toSerialize["youtube"] = o.Youtube.Get()
	}
	if o.Web.IsSet() {
		toSerialize["web"] = o.Web.Get()
	}
	return toSerialize, nil
}

type NullableConfigUpdateForm struct {
	value *ConfigUpdateForm
	isSet bool
}

func (v NullableConfigUpdateForm) Get() *ConfigUpdateForm {
	return v.value
}

func (v *NullableConfigUpdateForm) Set(val *ConfigUpdateForm) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigUpdateForm) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigUpdateForm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigUpdateForm(val *ConfigUpdateForm) *NullableConfigUpdateForm {
	return &NullableConfigUpdateForm{value: val, isSet: true}
}

func (v NullableConfigUpdateForm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigUpdateForm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


