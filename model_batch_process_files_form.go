/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BatchProcessFilesForm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BatchProcessFilesForm{}

// BatchProcessFilesForm struct for BatchProcessFilesForm
type BatchProcessFilesForm struct {
	Files []FileModel `json:"files"`
	CollectionName string `json:"collection_name"`
}

type _BatchProcessFilesForm BatchProcessFilesForm

// NewBatchProcessFilesForm instantiates a new BatchProcessFilesForm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchProcessFilesForm(files []FileModel, collectionName string) *BatchProcessFilesForm {
	this := BatchProcessFilesForm{}
	this.Files = files
	this.CollectionName = collectionName
	return &this
}

// NewBatchProcessFilesFormWithDefaults instantiates a new BatchProcessFilesForm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchProcessFilesFormWithDefaults() *BatchProcessFilesForm {
	this := BatchProcessFilesForm{}
	return &this
}

// GetFiles returns the Files field value
func (o *BatchProcessFilesForm) GetFiles() []FileModel {
	if o == nil {
		var ret []FileModel
		return ret
	}

	return o.Files
}

// GetFilesOk returns a tuple with the Files field value
// and a boolean to check if the value has been set.
func (o *BatchProcessFilesForm) GetFilesOk() ([]FileModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Files, true
}

// SetFiles sets field value
func (o *BatchProcessFilesForm) SetFiles(v []FileModel) {
	o.Files = v
}

// GetCollectionName returns the CollectionName field value
func (o *BatchProcessFilesForm) GetCollectionName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CollectionName
}

// GetCollectionNameOk returns a tuple with the CollectionName field value
// and a boolean to check if the value has been set.
func (o *BatchProcessFilesForm) GetCollectionNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CollectionName, true
}

// SetCollectionName sets field value
func (o *BatchProcessFilesForm) SetCollectionName(v string) {
	o.CollectionName = v
}

func (o BatchProcessFilesForm) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BatchProcessFilesForm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["files"] = o.Files
	toSerialize["collection_name"] = o.CollectionName
	return toSerialize, nil
}

func (o *BatchProcessFilesForm) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"files",
		"collection_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBatchProcessFilesForm := _BatchProcessFilesForm{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBatchProcessFilesForm)

	if err != nil {
		return err
	}

	*o = BatchProcessFilesForm(varBatchProcessFilesForm)

	return err
}

type NullableBatchProcessFilesForm struct {
	value *BatchProcessFilesForm
	isSet bool
}

func (v NullableBatchProcessFilesForm) Get() *BatchProcessFilesForm {
	return v.value
}

func (v *NullableBatchProcessFilesForm) Set(val *BatchProcessFilesForm) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchProcessFilesForm) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchProcessFilesForm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchProcessFilesForm(val *BatchProcessFilesForm) *NullableBatchProcessFilesForm {
	return &NullableBatchProcessFilesForm{value: val, isSet: true}
}

func (v NullableBatchProcessFilesForm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchProcessFilesForm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


