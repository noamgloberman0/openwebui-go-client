/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CloneForm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloneForm{}

// CloneForm struct for CloneForm
type CloneForm struct {
	Title NullableString `json:"title,omitempty"`
}

// NewCloneForm instantiates a new CloneForm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloneForm() *CloneForm {
	this := CloneForm{}
	return &this
}

// NewCloneFormWithDefaults instantiates a new CloneForm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloneFormWithDefaults() *CloneForm {
	this := CloneForm{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloneForm) GetTitle() string {
	if o == nil || IsNil(o.Title.Get()) {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloneForm) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *CloneForm) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *CloneForm) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *CloneForm) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *CloneForm) UnsetTitle() {
	o.Title.Unset()
}

func (o CloneForm) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloneForm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	return toSerialize, nil
}

type NullableCloneForm struct {
	value *CloneForm
	isSet bool
}

func (v NullableCloneForm) Get() *CloneForm {
	return v.value
}

func (v *NullableCloneForm) Set(val *CloneForm) {
	v.value = val
	v.isSet = true
}

func (v NullableCloneForm) IsSet() bool {
	return v.isSet
}

func (v *NullableCloneForm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloneForm(val *CloneForm) *NullableCloneForm {
	return &NullableCloneForm{value: val, isSet: true}
}

func (v NullableCloneForm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloneForm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


