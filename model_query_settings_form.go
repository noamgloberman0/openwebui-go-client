/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the QuerySettingsForm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuerySettingsForm{}

// QuerySettingsForm struct for QuerySettingsForm
type QuerySettingsForm struct {
	K NullableInt32 `json:"k,omitempty"`
	R NullableFloat32 `json:"r,omitempty"`
	Template NullableString `json:"template,omitempty"`
	Hybrid NullableBool `json:"hybrid,omitempty"`
}

// NewQuerySettingsForm instantiates a new QuerySettingsForm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuerySettingsForm() *QuerySettingsForm {
	this := QuerySettingsForm{}
	return &this
}

// NewQuerySettingsFormWithDefaults instantiates a new QuerySettingsForm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuerySettingsFormWithDefaults() *QuerySettingsForm {
	this := QuerySettingsForm{}
	return &this
}

// GetK returns the K field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuerySettingsForm) GetK() int32 {
	if o == nil || IsNil(o.K.Get()) {
		var ret int32
		return ret
	}
	return *o.K.Get()
}

// GetKOk returns a tuple with the K field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuerySettingsForm) GetKOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.K.Get(), o.K.IsSet()
}

// HasK returns a boolean if a field has been set.
func (o *QuerySettingsForm) HasK() bool {
	if o != nil && o.K.IsSet() {
		return true
	}

	return false
}

// SetK gets a reference to the given NullableInt32 and assigns it to the K field.
func (o *QuerySettingsForm) SetK(v int32) {
	o.K.Set(&v)
}
// SetKNil sets the value for K to be an explicit nil
func (o *QuerySettingsForm) SetKNil() {
	o.K.Set(nil)
}

// UnsetK ensures that no value is present for K, not even an explicit nil
func (o *QuerySettingsForm) UnsetK() {
	o.K.Unset()
}

// GetR returns the R field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuerySettingsForm) GetR() float32 {
	if o == nil || IsNil(o.R.Get()) {
		var ret float32
		return ret
	}
	return *o.R.Get()
}

// GetROk returns a tuple with the R field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuerySettingsForm) GetROk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.R.Get(), o.R.IsSet()
}

// HasR returns a boolean if a field has been set.
func (o *QuerySettingsForm) HasR() bool {
	if o != nil && o.R.IsSet() {
		return true
	}

	return false
}

// SetR gets a reference to the given NullableFloat32 and assigns it to the R field.
func (o *QuerySettingsForm) SetR(v float32) {
	o.R.Set(&v)
}
// SetRNil sets the value for R to be an explicit nil
func (o *QuerySettingsForm) SetRNil() {
	o.R.Set(nil)
}

// UnsetR ensures that no value is present for R, not even an explicit nil
func (o *QuerySettingsForm) UnsetR() {
	o.R.Unset()
}

// GetTemplate returns the Template field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuerySettingsForm) GetTemplate() string {
	if o == nil || IsNil(o.Template.Get()) {
		var ret string
		return ret
	}
	return *o.Template.Get()
}

// GetTemplateOk returns a tuple with the Template field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuerySettingsForm) GetTemplateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Template.Get(), o.Template.IsSet()
}

// HasTemplate returns a boolean if a field has been set.
func (o *QuerySettingsForm) HasTemplate() bool {
	if o != nil && o.Template.IsSet() {
		return true
	}

	return false
}

// SetTemplate gets a reference to the given NullableString and assigns it to the Template field.
func (o *QuerySettingsForm) SetTemplate(v string) {
	o.Template.Set(&v)
}
// SetTemplateNil sets the value for Template to be an explicit nil
func (o *QuerySettingsForm) SetTemplateNil() {
	o.Template.Set(nil)
}

// UnsetTemplate ensures that no value is present for Template, not even an explicit nil
func (o *QuerySettingsForm) UnsetTemplate() {
	o.Template.Unset()
}

// GetHybrid returns the Hybrid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuerySettingsForm) GetHybrid() bool {
	if o == nil || IsNil(o.Hybrid.Get()) {
		var ret bool
		return ret
	}
	return *o.Hybrid.Get()
}

// GetHybridOk returns a tuple with the Hybrid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuerySettingsForm) GetHybridOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Hybrid.Get(), o.Hybrid.IsSet()
}

// HasHybrid returns a boolean if a field has been set.
func (o *QuerySettingsForm) HasHybrid() bool {
	if o != nil && o.Hybrid.IsSet() {
		return true
	}

	return false
}

// SetHybrid gets a reference to the given NullableBool and assigns it to the Hybrid field.
func (o *QuerySettingsForm) SetHybrid(v bool) {
	o.Hybrid.Set(&v)
}
// SetHybridNil sets the value for Hybrid to be an explicit nil
func (o *QuerySettingsForm) SetHybridNil() {
	o.Hybrid.Set(nil)
}

// UnsetHybrid ensures that no value is present for Hybrid, not even an explicit nil
func (o *QuerySettingsForm) UnsetHybrid() {
	o.Hybrid.Unset()
}

func (o QuerySettingsForm) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuerySettingsForm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.K.IsSet() {
		toSerialize["k"] = o.K.Get()
	}
	if o.R.IsSet() {
		toSerialize["r"] = o.R.Get()
	}
	if o.Template.IsSet() {
		toSerialize["template"] = o.Template.Get()
	}
	if o.Hybrid.IsSet() {
		toSerialize["hybrid"] = o.Hybrid.Get()
	}
	return toSerialize, nil
}

type NullableQuerySettingsForm struct {
	value *QuerySettingsForm
	isSet bool
}

func (v NullableQuerySettingsForm) Get() *QuerySettingsForm {
	return v.value
}

func (v *NullableQuerySettingsForm) Set(val *QuerySettingsForm) {
	v.value = val
	v.isSet = true
}

func (v NullableQuerySettingsForm) IsSet() bool {
	return v.isSet
}

func (v *NullableQuerySettingsForm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuerySettingsForm(val *QuerySettingsForm) *NullableQuerySettingsForm {
	return &NullableQuerySettingsForm{value: val, isSet: true}
}

func (v NullableQuerySettingsForm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuerySettingsForm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


