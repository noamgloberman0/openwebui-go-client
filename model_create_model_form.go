/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateModelForm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateModelForm{}

// CreateModelForm struct for CreateModelForm
type CreateModelForm struct {
	Model *Model `json:"model,omitempty"`
	Stream *Stream `json:"stream,omitempty"`
	Path *Path `json:"path,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateModelForm CreateModelForm

// NewCreateModelForm instantiates a new CreateModelForm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateModelForm() *CreateModelForm {
	this := CreateModelForm{}
	return &this
}

// NewCreateModelFormWithDefaults instantiates a new CreateModelForm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateModelFormWithDefaults() *CreateModelForm {
	this := CreateModelForm{}
	return &this
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *CreateModelForm) GetModel() Model {
	if o == nil || IsNil(o.Model) {
		var ret Model
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateModelForm) GetModelOk() (*Model, bool) {
	if o == nil || IsNil(o.Model) {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *CreateModelForm) HasModel() bool {
	if o != nil && !IsNil(o.Model) {
		return true
	}

	return false
}

// SetModel gets a reference to the given Model and assigns it to the Model field.
func (o *CreateModelForm) SetModel(v Model) {
	o.Model = &v
}

// GetStream returns the Stream field value if set, zero value otherwise.
func (o *CreateModelForm) GetStream() Stream {
	if o == nil || IsNil(o.Stream) {
		var ret Stream
		return ret
	}
	return *o.Stream
}

// GetStreamOk returns a tuple with the Stream field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateModelForm) GetStreamOk() (*Stream, bool) {
	if o == nil || IsNil(o.Stream) {
		return nil, false
	}
	return o.Stream, true
}

// HasStream returns a boolean if a field has been set.
func (o *CreateModelForm) HasStream() bool {
	if o != nil && !IsNil(o.Stream) {
		return true
	}

	return false
}

// SetStream gets a reference to the given Stream and assigns it to the Stream field.
func (o *CreateModelForm) SetStream(v Stream) {
	o.Stream = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *CreateModelForm) GetPath() Path {
	if o == nil || IsNil(o.Path) {
		var ret Path
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateModelForm) GetPathOk() (*Path, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *CreateModelForm) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given Path and assigns it to the Path field.
func (o *CreateModelForm) SetPath(v Path) {
	o.Path = &v
}

func (o CreateModelForm) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateModelForm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Model) {
		toSerialize["model"] = o.Model
	}
	if !IsNil(o.Stream) {
		toSerialize["stream"] = o.Stream
	}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateModelForm) UnmarshalJSON(data []byte) (err error) {
	varCreateModelForm := _CreateModelForm{}

	err = json.Unmarshal(data, &varCreateModelForm)

	if err != nil {
		return err
	}

	*o = CreateModelForm(varCreateModelForm)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "model")
		delete(additionalProperties, "stream")
		delete(additionalProperties, "path")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateModelForm struct {
	value *CreateModelForm
	isSet bool
}

func (v NullableCreateModelForm) Get() *CreateModelForm {
	return v.value
}

func (v *NullableCreateModelForm) Set(val *CreateModelForm) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateModelForm) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateModelForm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateModelForm(val *CreateModelForm) *NullableCreateModelForm {
	return &NullableCreateModelForm{value: val, isSet: true}
}

func (v NullableCreateModelForm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateModelForm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


