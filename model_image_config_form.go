/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ImageConfigForm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImageConfigForm{}

// ImageConfigForm struct for ImageConfigForm
type ImageConfigForm struct {
	MODEL string `json:"MODEL"`
	IMAGE_SIZE string `json:"IMAGE_SIZE"`
	IMAGE_STEPS int32 `json:"IMAGE_STEPS"`
}

type _ImageConfigForm ImageConfigForm

// NewImageConfigForm instantiates a new ImageConfigForm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageConfigForm(mODEL string, iMAGESIZE string, iMAGESTEPS int32) *ImageConfigForm {
	this := ImageConfigForm{}
	this.MODEL = mODEL
	this.IMAGE_SIZE = iMAGESIZE
	this.IMAGE_STEPS = iMAGESTEPS
	return &this
}

// NewImageConfigFormWithDefaults instantiates a new ImageConfigForm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageConfigFormWithDefaults() *ImageConfigForm {
	this := ImageConfigForm{}
	return &this
}

// GetMODEL returns the MODEL field value
func (o *ImageConfigForm) GetMODEL() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MODEL
}

// GetMODELOk returns a tuple with the MODEL field value
// and a boolean to check if the value has been set.
func (o *ImageConfigForm) GetMODELOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MODEL, true
}

// SetMODEL sets field value
func (o *ImageConfigForm) SetMODEL(v string) {
	o.MODEL = v
}

// GetIMAGE_SIZE returns the IMAGE_SIZE field value
func (o *ImageConfigForm) GetIMAGE_SIZE() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IMAGE_SIZE
}

// GetIMAGE_SIZEOk returns a tuple with the IMAGE_SIZE field value
// and a boolean to check if the value has been set.
func (o *ImageConfigForm) GetIMAGE_SIZEOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IMAGE_SIZE, true
}

// SetIMAGE_SIZE sets field value
func (o *ImageConfigForm) SetIMAGE_SIZE(v string) {
	o.IMAGE_SIZE = v
}

// GetIMAGE_STEPS returns the IMAGE_STEPS field value
func (o *ImageConfigForm) GetIMAGE_STEPS() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IMAGE_STEPS
}

// GetIMAGE_STEPSOk returns a tuple with the IMAGE_STEPS field value
// and a boolean to check if the value has been set.
func (o *ImageConfigForm) GetIMAGE_STEPSOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IMAGE_STEPS, true
}

// SetIMAGE_STEPS sets field value
func (o *ImageConfigForm) SetIMAGE_STEPS(v int32) {
	o.IMAGE_STEPS = v
}

func (o ImageConfigForm) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImageConfigForm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["MODEL"] = o.MODEL
	toSerialize["IMAGE_SIZE"] = o.IMAGE_SIZE
	toSerialize["IMAGE_STEPS"] = o.IMAGE_STEPS
	return toSerialize, nil
}

func (o *ImageConfigForm) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"MODEL",
		"IMAGE_SIZE",
		"IMAGE_STEPS",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varImageConfigForm := _ImageConfigForm{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varImageConfigForm)

	if err != nil {
		return err
	}

	*o = ImageConfigForm(varImageConfigForm)

	return err
}

type NullableImageConfigForm struct {
	value *ImageConfigForm
	isSet bool
}

func (v NullableImageConfigForm) Get() *ImageConfigForm {
	return v.value
}

func (v *NullableImageConfigForm) Set(val *ImageConfigForm) {
	v.value = val
	v.isSet = true
}

func (v NullableImageConfigForm) IsSet() bool {
	return v.isSet
}

func (v *NullableImageConfigForm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageConfigForm(val *ImageConfigForm) *NullableImageConfigForm {
	return &NullableImageConfigForm{value: val, isSet: true}
}

func (v NullableImageConfigForm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageConfigForm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


